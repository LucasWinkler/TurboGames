@page "/Profile/{username?}"
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model GameStore.Pages.Profile.IndexModel
@{
    ViewData["Title"] = "Profile";
    var user = UserManager.GetUserAsync(User);
}

<div class="container">
    @if (!Model.DoesExist)
    {
        <partial name="_DoesNotExist" />
    }
    else
    {
        <div class="row">
            <div class="col-md-offset-2 col-md-8 col-lg-offset-3 col-lg-6">
                <div class="well profile">
                    <div class="col-sm-12">
                        <div class="col-lg-12 col-md-12">
                            <h1>
                                @Model.Info.Username
                                @if (SignInManager.IsSignedIn(User))
                                {
                                    if (Model.Info.Username != @Model.User.Identity.Name)
                                    {
                                        <a href="#" class="btn btn-success">Add friend</a>
                                    }
                                }
                            </h1>
                            <hr class="my-4" />
                            <p><strong>Name: </strong>@Model.Info.FullName</p>
                            <p><strong>Gender: </strong>@Model.Info.Gender</p>
                            <p><strong>Date of birth: </strong>@Model.Info.DOB.ToLongDateString()</p>
                            <p>
                                <strong>Favourite Platform: </strong>
                                @if (Model.Info.FavouritePlatform != null)
                                {
                                    @Model.Info.FavouritePlatform.Name
                                }
                                else
                                {
                                    @Html.Raw("None");
                                }
                            </p>
                            <p>
                                <strong>Favourite Category: </strong>
                                @if (Model.Info.FavouriteCategory != null)
                                {
                                    @Model.Info.FavouriteCategory.Name
                                }
                                else
                                {
                                    @Html.Raw("None");
                                }
                            </p>
                        </div>
                        <ul class="list-group">
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Games
                                <span class="badge badge-primary badge-pill">@Model.Info.GameCount</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Friends
                                <span class="badge badge-primary badge-pill">@Model.Info.FriendCount</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Family
                                <span class="badge badge-primary badge-pill">@Model.Info.FamilyCount</span>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
